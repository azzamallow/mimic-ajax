if(typeof jasmine!=="undefined"){var describeForAjax=jasmine.Env.prototype.describe;jasmine.Env.prototype.describe=function(b,a){return describeForAjax.call(this,b,function(){var c=Mimic.Ajax.getInstance();c.start();a.call(this,c.request);});};var beforeEachForAjax=jasmine.Env.prototype.beforeEach;jasmine.Env.prototype.beforeEach=function(a){return beforeEachForAjax.call(this,function(){a.call(this,Mimic.Ajax.getInstance().request);});};var itForAjax=jasmine.Env.prototype.it;jasmine.Env.prototype.it=function(b,a){return itForAjax.call(this,b,function(){a.call(this,Mimic.Ajax.getInstance().request);});};}var Mimic={};Mimic.Ajax=function(){var b=[],a=function(c){return{toHaveResponse:function(d,e){b.push({url:c,text:e,status:d});}};};this.request=function(c){return a(c);};this.start=function(){XMLHttpRequest=function(){this.onreadystatechange=undefined;this.readyState=-1;this.responseText=null;this.responseXML=null;this.status=-1;this.statusText=null;this.open=function(h,e,g,c,d){var f;for(f=0;f<b.length;f+=1){if(b[f].url===e){this.responseText=b[f].text;this.status=b[f].status;this.readyState=4;}}};this.send=function(c){if(this.onreadystatechange!==undefined){this.onreadystatechange(this);}};this.getAllResponseHeaders=function(){};this.getResponseHeader=function(c){};this.setRequestHeader=function(d,c){};this.abort=function(){};};};};Mimic.Ajax.getInstance=function(){if(Mimic.Ajax.instance===undefined){Mimic.Ajax.instance=new Mimic.Ajax();}return Mimic.Ajax.instance;};Mimic.HTTP={SUCCESS:200,INTERNAL_SERVER_ERROR:500,NOT_FOUND:404};